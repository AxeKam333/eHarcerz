 # eHarcerz OpenAPI

openapi: 3.0.3

info:
  title: OpenAPI backend for eHarcerz
  version: "1.2"
  
externalDocs:
  description: Github repository
  url: https://github.com/AxeKam333/eHarcerz

servers:
  - url: https://localhost:44333/api

tags:
  - name: troop
    description: Operations avalible for troop leader
  - name: patrol
    description: Operations avalible for patrol leader
  - name: scout
    description: Operations avalible for every scout
    
    
paths:
  /troop/scouts:
    summary: info 
    post:
      tags: 
        - troop
      summary: Get list all info about badges needed in troop
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HashId'
      responses:
        200:
          description: Success
        400:
          description: Failed
  /troop/badges:
    summary: info 
    post:
      tags: 
        - troop
      summary: Get list all info about badges needed in troop
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HashId'
      responses:
        200:
          description: Success
        400:
          description: Failed
  /create/patrol:
    post:
      tags: 
      - troop
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HashId'
      responses:
        200:
          description: Success
  /create/scout:
    post:
      tags: 
      - troop
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HashId'
      responses:
        200:
          description: Success
          
  /patrol/scouts:
    post:
      tags: 
      - patrol
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HashId'
      responses:
        200:
          description: Success
  /patrol/badges:
    post:
      tags: 
      - patrol
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HashId'
      responses:
        200:
          description: Success
  /scout/badges:
    post:
      tags: 
      - scout
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HashId'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Badges'
 
        
components:
  schemas:
    HashId:
      type: string
      example: {id: 9ca7c1c2-31e8-11ee-be56-0242ac120002}
    Badges:
      type: string
      example: {}